# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Build mrs packages 🥺

on:
  workflow_dispatch:
permissions:
  contents: read
jobs:
  release-images:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Set up maven
      uses: stCarolas/setup-maven@v5
      with:
      # Version Spec of the version to use.  Examples: 10.x, 10.15.1, >=10.15.0
        maven-version: 3.9.2 # optional, default is 3.8.2
    - name: Set up JDK
      uses: actions/setup-java@v3.14.1
      with:
        distribution: "dragonwell"
        java-version: 8
    - name: Set up Node
      uses: actions/setup-node@v3.9.1
      with:
        # Version Spec of the version to use. Examples: 12.x, 10.15.1, >=10.15.0.
        node-version: 20.4.0 # optional
    - name: Set up Docker
      uses: docker/setup-docker-action@v4.3.0
    - name: Echo Version
      run: |
        python -V
        mvn -version
        java -version
        node -v
        docker -v

        
    - uses: actions-tools/yaml-outputs@v2
      id: yaml
      with:
        file-path: './config.yaml'
    - name: Aggregate colleges
      id: aggregate
      run: |
        colleges=()
        # 获取所有以 image__colleges__ 开头的环境变量
        env_vars=$(env | grep '^image__colleges__')
        # 遍历这些环境变量
        while IFS='=' read -r key value; do
          colleges+=("$value")
        done <<< "$env_vars"
        # 将数组转换为字符串并存储到环境变量中
        echo "image__colleges=${colleges[*]}" >> $GITHUB_ENV
    - name: Read config yaml
      run: |
        echo "${{ env.image__version }}"
        echo "${{ env.image__colleges }}"
        echo "${{env.repo__frontend__branch }} ${{ env.repo__frontend__url }}"
        echo "${{env.repo__backend__branch }} ${{ env.repo__backend__url }}"
        echo "${{ env.repo__host }}"
        echo "${{ env.docker__host }}"

        
    - name: Set up SSH key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -t rsa gitee.com >> ~/.ssh/known_hosts
    - name: Clone repository via SSH
      run: |
        git clone --branch ${{ env.repo__frontend__branch }} --single-branch \
          ${{ env.repo__frontend__url }} material-reporting-front
        git clone --branch ${{ env.repo__backend__branch }} --single-branch \
          ${{ env.repo__backend__url }} material-reporting-system


    - name: Set execute permission for script
      run: |
        chmod +x mrs-cicd.py
    - name: List files to verify
      run: |
          ls -la
          ls -la material-reporting-front
          ls -la material-reporting-system


    - name: Cache npm dependencies
      uses: actions/cache@v4.2.3
      with:
        path: material-reporting-front/node_modules
        key: ${{ runner.os }}-npm-cache-${{ hashFiles('material-reporting-front/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-npm-cache-
    - name: Cache Maven dependencies
      uses: actions/cache@v4.2.3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-cache-${{ hashFiles('material-reporting-system/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-cache-
    - name: intstall dependences 
      run: |
        cd material-reporting-front && npm install
        cd ../material-reporting-system && mvn install

      
    - name: Execute script 💬
      run: |
        ./mrs-cicd.py --ver ${{ env.image__version }} --colleges ${{ env.image__colleges }} \
        --url ${{ env.docker__host }}  --user ${{ secrets.DOCKER_USERNAME }} --password ${{ secrets.DOCKER_PASSWORD }} 
